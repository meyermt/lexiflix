<script>
  //console.log("your loc id is " + <%= @video.loc_id %>);
  var tag = document.createElement('script');
  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  delete window.player;
  delete this.player;
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '390',
      width: '640',
      videoId: '<%= @video.loc_id %>',
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
    console.log(player.getCurrentTime);
  }

  function onPlayerReady(event) {
    event.target.playVideo();
  }

  var done = false;
  function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.ENDED && !done) {
       done = true;
    }
  }
  function stopVideo() {
    player.stopVideo();
  }

  var unescapeScript = unescapeHtml('<%= @script %>');
  var jsonScript = JSON.parse(unescapeScript);

  function scriptTimer() {
    var videoTime = window.player.getCurrentTime();
    var currentScript = jsonScript[0].text;
    $.each(jsonScript, function (index, value) {
      if (value.time < videoTime) {
        currentScript = value.text;
      }
    });
    $(".sub-text").text(currentScript);
    if (done) {
      $(".vid-questions").toggleClass("hidden");
      // stop running this when video is done
      window.clearInterval(timerFunc);
      // might have to do this in chrome
      this.clearInterval(timerFunc);
    }
  }

  function unescapeHtml(safe) {
      return safe.replace(/&amp;/g, '&')
          .replace(/&lt;/g, '<')
          .replace(/&gt;/g, '>')
          .replace(/&quot;/g, '"')
          .replace(/&#039;/g, "'")
          .replace(/&#39;/g, "'");
  }

  var timerFunc = setInterval(scriptTimer, 1000);

  //
  // if done {
  //   window.clearInterval(scriptTimer);
  // }
  //function returnTime() {
    //var videoTime = player.getCurrentTime();
    //$(".time-display").text(videoTime);
  //}
</script>

<div class="container">
  <div class="page-header">
    <ul class="list-inline">
      <li><h1 class="network-name"><%= @video.title %></h1></li>
      <% if @user.owner == true %>
        <li>
          <%= form_tag("/videos/#{@video.id}/edit", method: 'get') do  %>
            <%= submit_tag "Edit Video Details", class: 'btn btn-info btn-lg'%>
          <% end %>
        </li>
        <li>
          <%= form_tag("/videos/#{@video.id}", method: 'delete') do  %>
            <%= submit_tag "Delete This Video", class: 'btn btn-danger btn-lg'%>
          <% end %>
        </li>
      <% end %>
    </ul>
  </div>
  <div class="row">
    <div class="col-lg-12">
      <div id="player" class="video-container">
      </div>
      <div class="overlay-desc">
        <!-- <h4><a onclick="showDefinition()" href="#" class="sub-text"></a></h4> -->
        <h4 class="sub-text"></h4>
      </div>
    </div>
  </div>
  <div class="row alert alert-info">
    <strong>Eventually this will show your definition.</strong>
  </div>
  <div class="vid-questions row hidden">
    <div class="col-sm-8">
      <%= form_tag("/results", method: 'post') do  %>
        <%= hidden_field_tag(:video_id, @video.id) %>
        <% questions = Question.where(level: @user.level, video_id: @video.id) %>
        <% questions.each do | question | %>
          <h4><%= question.query %></h4>
          <% question.answers.each_with_index do | answer, index | %>
          <div class="radio">
            <%= radio_button_tag(:"question_#{question.id}", "#{question.id}_#{answer.id}") %>
            <%= label_tag(:answer_label, answer.solution) %>
          </div>
          <% end %>
        <% end %>
      <%= submit_tag "Submit My Answers!", class: 'btn btn-info btn-lg'%>
      or
      <%= link_to "Don't Feel Like it Now", "videos" %>
      <% end %>
    </div>
  </div>
</div>
